name: BASEIMAGE

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches:
      - master
      - BASEIMAGE
    # Publish semver tags as releases.
    tags: ['v*.*.*']

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  java:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      # https://github.com/docker/setup-buildx-action
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}

      - name: copy rootfs
        run: |
          cd java
          cp -rf ./rootfs ./8-ajdk/
          cp -rf ./rootfs ./8-ajdk-onbuild/
          cp -rf ./rootfs ./8-jdk/
          cp -rf ./rootfs ./8-jdk-onbuild/
          cp -rf ./rootfs ./11-jdk/
          cp -rf ./rootfs ./11-jdk-onbuild/
          cp -rf ./rootfs ./17-jdk/
          cp -rf ./rootfs ./17-jdk-onbuild/
          cp -rf ./rootfs ./21-jdk/
          cp -rf ./rootfs ./21-jdk-onbuild/

      # Workaround: https://github.com/docker/build-push-action/issues/461
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: 8-ajdk
        uses: docker/build-push-action@v5
        with:
          context: ./java/8-ajdk/
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/java:8-ajdk
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: 8-ajdk-onbuild
        uses: docker/build-push-action@v5
        with:
          context: ./java/8-ajdk-onbuild/
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/java:8-ajdk-onbuild
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: 8-jdk
        uses: docker/build-push-action@v5
        with:
          context: ./java/8-jdk/
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/java:8-jdk
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: 8-jdk-onbuild
        uses: docker/build-push-action@v5
        with:
          context: ./java/8-jdk-onbuild/
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/java:8-jdk-onbuild
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: 11-jdk
        uses: docker/build-push-action@v5
        with:
          context: ./java/11-jdk/
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/java:11-jdk
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: 11-jdk-onbuild
        uses: docker/build-push-action@v5
        with:
          context: ./java/11-jdk-onbuild/
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/java:11-jdk-onbuild
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: 17-jdk
        uses: docker/build-push-action@v5
        with:
          context: ./java/17-jdk/
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/java:17-jdk
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: 17-jdk-onbuild
        uses: docker/build-push-action@v5
        with:
          context: ./java/17-jdk-onbuild/
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/java:17-jdk-onbuild
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: 21-jdk
        uses: docker/build-push-action@v5
        with:
          context: ./java/21-jdk/
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/java:21-jdk
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: 21-jdk-onbuild
        uses: docker/build-push-action@v5
        with:
          context: ./java/21-jdk-onbuild/
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/java:21-jdk-onbuild
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
